# Configuration Pre-commit pour Arkalia-CIA
# Version optimisée pour éviter les conflits et problèmes récurrents

repos:
  # ==============================================
  # FORMATAGE PYTHON (ORDRE CRITIQUE)
  # ==============================================

  # 1. Ruff - Linting et auto-fix en premier
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.15
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        stages: [pre-commit]

  # 2. Black - Formatage après ruff
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.10
        args: [--line-length=88, --target-version=py310]
        stages: [pre-commit]

  # 3. isort - Imports après black pour éviter conflits
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args:
          [--profile, black, --line-length, "88", --force-sort-within-sections]
        stages: [pre-commit]

  # ==============================================
  # QUALITY & SECURITY (NON-BLOQUANTS)
  # ==============================================

  # MyPy - Type checking (warning seulement)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]
        args:
          [--ignore-missing-imports, --no-strict-optional, --no-error-summary]
        stages: [pre-commit]
        # Continuer même en cas d'erreur mypy
        verbose: true
        fail_fast: false

  # Bandit - Sécurité (fichiers spécifiques seulement)
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [
            -r,
            arkalia_cia_python_backend/api.py,
            arkalia_cia_python_backend/database.py,
            arkalia_cia_python_backend/pdf_processor.py,
            --skip,
            B101,
            B108,
            B306, # Skip assert, temp dirs, mktemp in tests
          ]
        stages: [pre-commit]
        # Exclure les tests pour éviter false positives
        exclude: ^tests/

  # ==============================================
  # HOOKS GÉNÉRAUX (RAPIDES ET FIABLES)
  # ==============================================

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Nettoyage fichiers
      - id: trailing-whitespace
        stages: [pre-commit]
      - id: end-of-file-fixer
        stages: [pre-commit]

      # Vérifications basiques
      - id: check-yaml
        stages: [pre-commit]
      - id: check-added-large-files
        args: [--maxkb=5000] # Limite à 5MB
        stages: [pre-commit]
      - id: check-merge-conflict
        stages: [pre-commit]

      # Python spécifique
      - id: debug-statements
        stages: [pre-commit]
      - id: check-docstring-first
        stages: [pre-commit]

# ==============================================
# CONFIGURATION GLOBALE OPTIMISÉE
# ==============================================

# Stratégie : ne pas faire échouer tout le pipeline
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0

# Amélioration performance
default_language_version:
  python: python3.10

# Exclusions globales pour éviter problèmes
exclude: |
  (?x)^(
    .*\.egg-info/.*|
    .*/__pycache__/.*|
    .*/\.git/.*|
    .*/build/.*|
    .*/dist/.*|
    .*/venv/.*|
    .*/\.venv/.*|
    arkalia_cia_venv/.*|
    arkalia_cia/ios/.*|
    arkalia_cia/android/.*|
    arkalia_cia/windows/.*|
    arkalia_cia/linux/.*|
    arkalia_cia/macos/.*|
    arkalia_cia/web/.*|
    .*\.lock$|
    .*\.log$
  )$
